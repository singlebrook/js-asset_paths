<%# encoding: utf-8 %>

var PathHelper = (function(definitions) {
  var assetExtensions = <%= ActionView::Helpers::AssetUrlHelper::ASSET_EXTENSIONS.to_json %>;
  var assetPublicDirectories = <%= ActionView::Helpers::AssetUrlHelper::ASSET_PUBLIC_DIRECTORIES.to_json %>;

  return {
    assetPath: function(source, opts) {
      return [prefix(source), filename(source, opts)].join("/");
    },

    <% JsAssetPaths::ASSET_METHODS.map(&:to_s).each_with_index do |method, i| %>
    <%= "#{method.split('_').first}Path: function(source) {" %>
      <%= %Q(return this.assetPath(source, { type: "#{method.split('_').first}" });) %>
    <%= "}#{',' unless i == JsAssetPaths::ASSET_METHODS.count - 1}" %>
    <% end %>
  };

  function prefix(path) {
    var prefix = path.split("/");

    prefix.pop();
    prefix.shift();
    prefix.unshift("assets");

    return prefix.join("/");
  }

  function filename(source, opts) {
    var key = source;

    if (opts && opts.type) {
      key = [assetPublicDirectories[opts.type], key].join("/");

      if (source.split(".").length === 1) {
        key = [key, assetExtensions[opts.type]].join(".");
      }
    }

    if (definitions[key]) {
      return definitions[key];
    } else {
      throw "Unknown asset '" + key + "'. If you created it recently, you may need to restart Rails.";
    }
  }
})(<%= JsAssetPaths::Generator.generate! %>);
